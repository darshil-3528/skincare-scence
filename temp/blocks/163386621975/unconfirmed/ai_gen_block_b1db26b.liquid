{% doc %}
  @prompt
    Create a Shopify 2.0 section named "bestseller-products" using Liquid, JSON, and Tailwind CSS.
    
    This section should look like a modern, trending product carousel similar to beauty or skincare stores like Pilgrim.  
    
    ✨ Requirements:
    - A title area: “Bestsellers” with a subtitle “Unmissable Favourites You’ll Adore”.
    - Tabs above the product grid: “Trending Bestsellers”, “Skin Care”, “Makeup”, “Hair Care”.  
      → These tabs should dynamically filter products by Shopify collections (admin-selectable).
    - Dynamic product cards:  
      - Product image  
      - Discount badge (auto-calculated from compare_at_price)  
      - Rating stars (use metafields or dummy rating)  
      - Product title and short description  
      - Price (auto dynamic)  
      - “Add to Cart” or “Select Options” button (depending on product type)
      - Optional tag like “#1 in Skincare” or “SELLING FAST”
    - “See All” link on the top right that links to a selected collection.
    - Carousel or responsive grid layout (4 products per row on desktop, 2 on tablet, 1 on mobile)
    - Fully editable in Shopify Customizer:
      - Editable heading, subtitle, and button label
      - Collection selection for each tab
      - Toggle to show/hide discount labels and rating stars
    - Use Tailwind CSS for layout and responsive design.
    - Use schema JSON so all elements (text, collection, buttons) are editable in Shopify.
    - All product data (price, title, image, etc.) must be dynamically pulled from Shopify product objects.
    - Code must be clean, commented, and SEO-friendly.
    
    Output complete Shopify section code with {% schema %} and {% stylesheet %} if needed.
    
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-bestseller-section-{{ ai_gen_id }} {
    padding: 60px 0;
    background-color: #FDFBF7;
  }

  .ai-bestseller-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-bestseller-header-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 40px;
  }

  .ai-bestseller-title-area-{{ ai_gen_id }} {
    text-align: left;
  }

  .ai-bestseller-title-{{ ai_gen_id }} {
    font-family: {{ settings.type_header_font.family }}, sans-serif;
    font-size: 48px;
    font-weight: 600;
    color: #2E2A39;
    margin: 0 0 8px 0;
    line-height: 1.2;
  }

  .ai-bestseller-subtitle-{{ ai_gen_id }} {
    font-family: {{ settings.type_body_font.family }}, sans-serif;
    font-size: 18px;
    color: #666;
    margin: 0;
  }

  .ai-bestseller-see-all-{{ ai_gen_id }} {
    background-color: #9B046F;
    color: #FDFBF7;
    padding: 12px 24px;
    border-radius: 10px;
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .ai-bestseller-see-all-{{ ai_gen_id }}:hover {
    background-color: #7A0356;
  }

  .ai-bestseller-tabs-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
    margin-bottom: 40px;
    overflow-x: auto;
    padding-bottom: 8px;
  }

  .ai-bestseller-tab-{{ ai_gen_id }} {
    background-color: transparent;
    border: 2px solid #E5E5E5;
    color: #666;
    padding: 12px 24px;
    border-radius: 25px;
    cursor: pointer;
    white-space: nowrap;
    transition: all 0.3s ease;
    font-weight: 500;
  }

  .ai-bestseller-tab-{{ ai_gen_id }}.active {
    background-color: #9B046F;
    border-color: #9B046F;
    color: #FDFBF7;
  }

  .ai-bestseller-tab-{{ ai_gen_id }}:hover {
    border-color: #9B046F;
    color: #9B046F;
  }

  .ai-bestseller-tab-{{ ai_gen_id }}.active:hover {
    color: #FDFBF7;
  }

  .ai-bestseller-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 30px;
  }

  .ai-bestseller-card-{{ ai_gen_id }} {
    background-color: #FFFFFF;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 35px rgba(46, 42, 57, 0.05);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
  }

  .ai-bestseller-card-{{ ai_gen_id }}:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 45px rgba(46, 42, 57, 0.1);
  }

  .ai-bestseller-image-container-{{ ai_gen_id }} {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .ai-bestseller-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-bestseller-card-{{ ai_gen_id }}:hover .ai-bestseller-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-bestseller-badge-{{ ai_gen_id }} {
    position: absolute;
    top: 12px;
    left: 12px;
    background-color: #FF4444;
    color: white;
    padding: 4px 8px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
  }

  .ai-bestseller-tag-{{ ai_gen_id }} {
    position: absolute;
    top: 12px;
    right: 12px;
    background-color: #9B046F;
    color: white;
    padding: 4px 8px;
    border-radius: 20px;
    font-size: 11px;
    font-weight: 600;
  }

  .ai-bestseller-content-{{ ai_gen_id }} {
    padding: 20px;
  }

  .ai-bestseller-rating-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 4px;
    margin-bottom: 8px;
  }

  .ai-bestseller-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 2px;
  }

  .ai-bestseller-star-{{ ai_gen_id }} {
    width: 14px;
    height: 14px;
    fill: #FFD700;
  }

  .ai-bestseller-star-empty-{{ ai_gen_id }} {
    fill: #E5E5E5;
  }

  .ai-bestseller-rating-text-{{ ai_gen_id }} {
    font-size: 12px;
    color: #666;
    margin-left: 4px;
  }

  .ai-bestseller-product-title-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 600;
    color: #2E2A39;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }

  .ai-bestseller-product-description-{{ ai_gen_id }} {
    font-size: 14px;
    color: #666;
    margin: 0 0 12px 0;
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-bestseller-price-container-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 16px;
  }

  .ai-bestseller-price-{{ ai_gen_id }} {
    font-size: 18px;
    font-weight: 600;
    color: #2E2A39;
  }

  .ai-bestseller-compare-price-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999;
    text-decoration: line-through;
  }

  .ai-bestseller-add-to-cart-{{ ai_gen_id }} {
    width: 100%;
    background-color: #9B046F;
    color: #FDFBF7;
    border: none;
    padding: 12px;
    border-radius: 10px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-bestseller-add-to-cart-{{ ai_gen_id }}:hover {
    background-color: #7A0356;
  }

  .ai-bestseller-tab-content-{{ ai_gen_id }} {
    display: none;
  }

  .ai-bestseller-tab-content-{{ ai_gen_id }}.active {
    display: block;
  }

  @media (max-width: 1024px) {
    .ai-bestseller-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
    }
  }

  @media (max-width: 768px) {
    .ai-bestseller-header-{{ ai_gen_id }} {
      flex-direction: column;
      align-items: flex-start;
      gap: 20px;
    }

    .ai-bestseller-title-{{ ai_gen_id }} {
      font-size: 36px;
    }

    .ai-bestseller-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(2, 1fr);
      gap: 16px;
    }

    .ai-bestseller-tabs-{{ ai_gen_id }} {
      gap: 4px;
    }

    .ai-bestseller-tab-{{ ai_gen_id }} {
      padding: 10px 16px;
      font-size: 14px;
    }
  }

  @media (max-width: 480px) {
    .ai-bestseller-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
    }

    .ai-bestseller-title-{{ ai_gen_id }} {
      font-size: 28px;
    }

    .ai-bestseller-container-{{ ai_gen_id }} {
      padding: 0 16px;
    }
  }
{% endstyle %}

<bestseller-products-{{ ai_gen_id }}
  class="ai-bestseller-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-bestseller-container-{{ ai_gen_id }}">
    <div class="ai-bestseller-header-{{ ai_gen_id }}">
      <div class="ai-bestseller-title-area-{{ ai_gen_id }}">
        <h2 class="ai-bestseller-title-{{ ai_gen_id }}">{{ block.settings.section_title }}</h2>
        <p class="ai-bestseller-subtitle-{{ ai_gen_id }}">{{ block.settings.section_subtitle }}</p>
      </div>
      {% if block.settings.see_all_collection %}
        <a href="{{ block.settings.see_all_collection.url }}" class="ai-bestseller-see-all-{{ ai_gen_id }}">
          {{ block.settings.see_all_text }}
        </a>
      {% endif %}
    </div>

    <div class="ai-bestseller-tabs-{{ ai_gen_id }}">
      {% if block.settings.tab_1_collection %}
        <button class="ai-bestseller-tab-{{ ai_gen_id }} active" data-tab="tab1">
          {{ block.settings.tab_1_title }}
        </button>
      {% endif %}
      {% if block.settings.tab_2_collection %}
        <button class="ai-bestseller-tab-{{ ai_gen_id }}" data-tab="tab2">
          {{ block.settings.tab_2_title }}
        </button>
      {% endif %}
      {% if block.settings.tab_3_collection %}
        <button class="ai-bestseller-tab-{{ ai_gen_id }}" data-tab="tab3">
          {{ block.settings.tab_3_title }}
        </button>
      {% endif %}
      {% if block.settings.tab_4_collection %}
        <button class="ai-bestseller-tab-{{ ai_gen_id }}" data-tab="tab4">
          {{ block.settings.tab_4_title }}
        </button>
      {% endif %}
    </div>

    {% if block.settings.tab_1_collection %}
      <div class="ai-bestseller-tab-content-{{ ai_gen_id }} active" data-content="tab1">
        <div class="ai-bestseller-grid-{{ ai_gen_id }}">
          {% for product in block.settings.tab_1_collection.products limit: block.settings.products_per_tab %}
            {% render 'bestseller-product-card', product: product, block_id: ai_gen_id, block_settings: block.settings %}
          {% endfor %}
        </div>
      </div>
    {% endif %}

    {% if block.settings.tab_2_collection %}
      <div class="ai-bestseller-tab-content-{{ ai_gen_id }}" data-content="tab2">
        <div class="ai-bestseller-grid-{{ ai_gen_id }}">
          {% for product in block.settings.tab_2_collection.products limit: block.settings.products_per_tab %}
            {% render 'bestseller-product-card', product: product, block_id: ai_gen_id, block_settings: block.settings %}
          {% endfor %}
        </div>
      </div>
    {% endif %}

    {% if block.settings.tab_3_collection %}
      <div class="ai-bestseller-tab-content-{{ ai_gen_id }}" data-content="tab3">
        <div class="ai-bestseller-grid-{{ ai_gen_id }}">
          {% for product in block.settings.tab_3_collection.products limit: block.settings.products_per_tab %}
            {% render 'bestseller-product-card', product: product, block_id: ai_gen_id, block_settings: block.settings %}
          {% endfor %}
        </div>
      </div>
    {% endif %}

    {% if block.settings.tab_4_collection %}
      <div class="ai-bestseller-tab-content-{{ ai_gen_id }}" data-content="tab4">
        <div class="ai-bestseller-grid-{{ ai_gen_id }}">
          {% for product in block.settings.tab_4_collection.products limit: block.settings.products_per_tab %}
            {% render 'bestseller-product-card', product: product, block_id: ai_gen_id, block_settings: block.settings %}
          {% endfor %}
        </div>
      </div>
    {% endif %}
  </div>
</bestseller-products-{{ ai_gen_id }}>

{% comment %} Inline product card template {% endcomment %}
{% capture product_card_template %}
  <div class="ai-bestseller-card-{{ ai_gen_id }}">
    <div class="ai-bestseller-image-container-{{ ai_gen_id }}">
      {% if product.featured_image %}
        <img
          src="{{ product.featured_image | image_url: width: 400 }}"
          alt="{{ product.featured_image.alt | escape }}"
          class="ai-bestseller-image-{{ ai_gen_id }}"
          loading="lazy"
          width="400"
          height="400"
        >
      {% else %}
        <div class="ai-bestseller-image-placeholder-{{ ai_gen_id }}">
          {{ 'product-1' | placeholder_svg_tag }}
        </div>
      {% endif %}

      {% if block.settings.show_discount_badge and product.compare_at_price > product.price %}
        {% assign discount_percentage = product.compare_at_price | minus: product.price | times: 100 | divided_by: product.compare_at_price %}
        <div class="ai-bestseller-badge-{{ ai_gen_id }}">
          -{{ discount_percentage }}%
        </div>
      {% endif %}

      {% if block.settings.show_product_tags and product.tags.size > 0 %}
        {% for tag in product.tags limit: 1 %}
          {% if tag contains 'bestseller' or tag contains 'trending' or tag contains 'popular' %}
            <div class="ai-bestseller-tag-{{ ai_gen_id }}">
              {{ tag | upcase }}
            </div>
            {% break %}
          {% endif %}
        {% endfor %}
      {% endif %}
    </div>

    <div class="ai-bestseller-content-{{ ai_gen_id }}">
      {% if block.settings.show_rating %}
        <div class="ai-bestseller-rating-{{ ai_gen_id }}">
          <div class="ai-bestseller-stars-{{ ai_gen_id }}">
            {% assign rating = product.metafields.reviews.rating.value | default: 4.5 %}
            {% for i in (1..5) %}
              <svg class="ai-bestseller-star-{{ ai_gen_id }} {% if i > rating %}ai-bestseller-star-empty-{{ ai_gen_id }}{% endif %}" viewBox="0 0 24 24">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
            {% endfor %}
          </div>
          <span class="ai-bestseller-rating-text-{{ ai_gen_id }}">({{ product.metafields.reviews.rating_count.value | default: 127 }})</span>
        </div>
      {% endif %}

      <h3 class="ai-bestseller-product-title-{{ ai_gen_id }}">
        <a href="{{ product.url }}">{{ product.title }}</a>
      </h3>

      {% if product.description != blank %}
        <p class="ai-bestseller-product-description-{{ ai_gen_id }}">
          {{ product.description | strip_html | truncate: 80 }}
        </p>
      {% endif %}

      <div class="ai-bestseller-price-container-{{ ai_gen_id }}">
        <span class="ai-bestseller-price-{{ ai_gen_id }}">{{ product.price | money }}</span>
        {% if product.compare_at_price > product.price %}
          <span class="ai-bestseller-compare-price-{{ ai_gen_id }}">{{ product.compare_at_price | money }}</span>
        {% endif %}
      </div>

      {% if product.has_only_default_variant %}
        <form action="/cart/add" method="post" enctype="multipart/form-data">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <button type="submit" class="ai-bestseller-add-to-cart-{{ ai_gen_id }}">
            {{ block.settings.add_to_cart_text }}
          </button>
        </form>
      {% else %}
        <a href="{{ product.url }}" class="ai-bestseller-add-to-cart-{{ ai_gen_id }}">
          {{ block.settings.select_options_text }}
        </a>
      {% endif %}
    </div>
  </div>
{% endcapture %}

<script>
  (function() {
    class BestsellerProducts{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.setupTabs();
        this.renderProductCards();
      }

      setupTabs() {
        const tabs = this.querySelectorAll('.ai-bestseller-tab-{{ ai_gen_id }}');
        const contents = this.querySelectorAll('.ai-bestseller-tab-content-{{ ai_gen_id }}');

        tabs.forEach(tab => {
          tab.addEventListener('click', () => {
            const targetTab = tab.dataset.tab;

            tabs.forEach(t => t.classList.remove('active'));
            contents.forEach(c => c.classList.remove('active'));

            tab.classList.add('active');
            const targetContent = this.querySelector(`[data-content="${targetTab}"]`);
            if (targetContent) {
              targetContent.classList.add('active');
            }
          });
        });
      }

      renderProductCards() {
        const grids = this.querySelectorAll('.ai-bestseller-grid-{{ ai_gen_id }}');
        const cardTemplate = `{{ product_card_template | escape }}`;

        grids.forEach(grid => {
          if (grid.children.length === 0) {
            const tabContent = grid.closest('.ai-bestseller-tab-content-{{ ai_gen_id }}');
            const tabId = tabContent.dataset.content;
            
            let collection;
            switch(tabId) {
              case 'tab1':
                collection = {{ block.settings.tab_1_collection.products | json }};
                break;
              case 'tab2':
                collection = {{ block.settings.tab_2_collection.products | json }};
                break;
              case 'tab3':
                collection = {{ block.settings.tab_3_collection.products | json }};
                break;
              case 'tab4':
                collection = {{ block.settings.tab_4_collection.products | json }};
                break;
            }

            if (collection) {
              collection.slice(0, {{ block.settings.products_per_tab }}).forEach(product => {
                const cardElement = this.createProductCard(product);
                grid.appendChild(cardElement);
              });
            }
          }
        });
      }

      createProductCard(product) {
        const cardDiv = document.createElement('div');
        cardDiv.className = 'ai-bestseller-card-{{ ai_gen_id }}';
        
        const discountBadge = product.compare_at_price > product.price ? 
          `<div class="ai-bestseller-badge-{{ ai_gen_id }}">-${Math.round((product.compare_at_price - product.price) * 100 / product.compare_at_price)}%</div>` : '';

        const rating = product.metafields?.reviews?.rating?.value || 4.5;
        const ratingCount = product.metafields?.reviews?.rating_count?.value || 127;
        
        const stars = Array.from({length: 5}, (_, i) => 
          `<svg class="ai-bestseller-star-{{ ai_gen_id }} ${i >= rating ? 'ai-bestseller-star-empty-{{ ai_gen_id }}' : ''}" viewBox="0 0 24 24">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>`
        ).join('');

        cardDiv.innerHTML = `
          <div class="ai-bestseller-image-container-{{ ai_gen_id }}">
            <img src="${product.featured_image}" alt="${product.title}" class="ai-bestseller-image-{{ ai_gen_id }}" loading="lazy">
            ${discountBadge}
          </div>
          <div class="ai-bestseller-content-{{ ai_gen_id }}">
            {% if block.settings.show_rating %}
            <div class="ai-bestseller-rating-{{ ai_gen_id }}">
              <div class="ai-bestseller-stars-{{ ai_gen_id }}">${stars}</div>
              <span class="ai-bestseller-rating-text-{{ ai_gen_id }}">(${ratingCount})</span>
            </div>
            {% endif %}
            <h3 class="ai-bestseller-product-title-{{ ai_gen_id }}">
              <a href="${product.url}">${product.title}</a>
            </h3>
            <p class="ai-bestseller-product-description-{{ ai_gen_id }}">${product.description.substring(0, 80)}...</p>
            <div class="ai-bestseller-price-container-{{ ai_gen_id }}">
              <span class="ai-bestseller-price-{{ ai_gen_id }}">${product.price}</span>
              ${product.compare_at_price > product.price ? `<span class="ai-bestseller-compare-price-{{ ai_gen_id }}">${product.compare_at_price}</span>` : ''}
            </div>
            <button class="ai-bestseller-add-to-cart-{{ ai_gen_id }}">
              ${product.has_only_default_variant ? '{{ block.settings.add_to_cart_text }}' : '{{ block.settings.select_options_text }}'}
            </button>
          </div>
        `;

        return cardDiv;
      }
    }

    customElements.define('bestseller-products-{{ ai_gen_id }}', BestsellerProducts{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Bestseller products",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section content"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section title",
      "default": "Bestsellers"
    },
    {
      "type": "text",
      "id": "section_subtitle",
      "label": "Section subtitle",
      "default": "Unmissable Favourites You'll Adore"
    },
    {
      "type": "text",
      "id": "see_all_text",
      "label": "See all button text",
      "default": "See All"
    },
    {
      "type": "collection",
      "id": "see_all_collection",
      "label": "See all collection"
    },
    {
      "type": "range",
      "id": "products_per_tab",
      "min": 4,
      "max": 12,
      "step": 1,
      "label": "Products per tab",
      "default": 8
    },
    {
      "type": "header",
      "content": "Tab 1"
    },
    {
      "type": "text",
      "id": "tab_1_title",
      "label": "Tab 1 title",
      "default": "Trending Bestsellers"
    },
    {
      "type": "collection",
      "id": "tab_1_collection",
      "label": "Tab 1 collection"
    },
    {
      "type": "header",
      "content": "Tab 2"
    },
    {
      "type": "text",
      "id": "tab_2_title",
      "label": "Tab 2 title",
      "default": "Skin Care"
    },
    {
      "type": "collection",
      "id": "tab_2_collection",
      "label": "Tab 2 collection"
    },
    {
      "type": "header",
      "content": "Tab 3"
    },
    {
      "type": "text",
      "id": "tab_3_title",
      "label": "Tab 3 title",
      "default": "Makeup"
    },
    {
      "type": "collection",
      "id": "tab_3_collection",
      "label": "Tab 3 collection"
    },
    {
      "type": "header",
      "content": "Tab 4"
    },
    {
      "type": "text",
      "id": "tab_4_title",
      "label": "Tab 4 title",
      "default": "Hair Care"
    },
    {
      "type": "collection",
      "id": "tab_4_collection",
      "label": "Tab 4 collection"
    },
    {
      "type": "header",
      "content": "Product card settings"
    },
    {
      "type": "checkbox",
      "id": "show_discount_badge",
      "label": "Show discount badge",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "label": "Show rating stars",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_product_tags",
      "label": "Show product tags",
      "default": true
    },
    {
      "type": "text",
      "id": "add_to_cart_text",
      "label": "Add to cart button text",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "select_options_text",
      "label": "Select options button text",
      "default": "Select Options"
    }
  ],
  "presets": [
    {
      "name": "Bestseller products"
    }
  ]
}
{% endschema %}